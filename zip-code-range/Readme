As the problem statement is breakdown and decomposed into following class files.

Data Repository: 		In the data repository we will be reading data from a text file and read them as comma separated values and finally consolidated range list to a text file and create file.
MinRangeException:		This class handles user defined exceptions.
ZipcodeRange: 	  		This class will be acting like a POJO and having compareTo method for sorting out the given input range zipcodes
ZipcodeRunner:			This is the driver class where program will accepts inputs.
ZipcodeService:			This class having a method where the zipcode range will be validated first and then consolidated as per the requirement(logic)
Data Repository Test: 	Jnuit test cases for various scenarios were covered like invalid zipcodes, invalid filepath, and wrong input file content.
ZipcodeService Test:	Jnunit test cases for identifying the consolidated zipcodes 


Project Structure:
/zip-code-range/src/main/java/com/test/zipcode/range - All the java code files will be present over this package (Data Repository, MinRangeException, ZipcodeRange, ZipcodeRunner, ZipcodeService)
/zip-code-range/src/main/resources - Input text file will be provided here
/zip-code-range/src/test/java/com/test/zipcode/range - Jnuit test classes will be present here
zip-code-range/src/test/resources - Input files for Junits needs to be given here.

Environment:
Java 11
Junit
Maven
Testcoverage - 81%
